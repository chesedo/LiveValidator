!function(t,e,i,s){var r="LiveValidator";t[r]=t.fn[r]=function(e){if(!(this instanceof t))return void t.extend(!0,t.fn[r].defaults,e);var i='input[type!="button"][type!="file"][type!="hidden"][type!="image"][type!="radio"][type!="reset"][type!="submit"], textarea',n=this.filter(i).add(this.find(i)),o=arguments;if(e===s||"object"==typeof e&&"Array"!==e.constructor.name)return n.each(function(){t.data(this,r)||t.data(this,r,new LiveValidator(t,this,e))});if("string"==typeof e&&"_"!==e[0]){if("isValid"===e){var h=!0;return n.each(function(){var e=t.data(this,r);e instanceof LiveValidator?e.isValid()||(h=!1):h=!1}),h}return n.each(function(){var i=t.data(this,r);i instanceof LiveValidator&&("function"==typeof i[e]?"destroy"===e?(i.destroy(),t(this).removeData(r)):i[e].apply(i,Array.prototype.slice.call(o,1)):i._log("`"+e+"` method does not exist on plugin",1))})}return this},t.fn[r].defaults={themeData:{error:"error",missing:"missing",parentSelector:".row"},required:!1,liveEnabled:!0,checks:[],debug:!1}}(jQuery,window,document);var LiveValidator=function(t,e,i){if(!(this instanceof LiveValidator))return new LiveValidator(t,e,i);this.jq=t,this.element=e,this.$element=this.jq(e);var s=this.$element.is("[required] ");this.options=this.jq.extend(!0,{},this.jq.fn.LiveValidator.defaults,{required:s},this.$element.data(),i),this.tester=new LiveValidatorTester,this.missing=!1,this.errors=[],this.logLevels=["DEBUG","INFO","ERROR"],this._init()};LiveValidator.prototype={_init:function(){this._isValidTheme(this.options.theme)?(this.theme=new this.options.theme(this.jq,this.element,this.options.themeData),this._log("LiveValidator is using the theme "+this.theme.constructor.name)):(this.theme=new LiveValidatorTheme(this.jq,this.element,this.options.themeData),this._log("LiveValidator is using the default theme")),this.options.required?this.setRequired():this.unsetRequired(),this.options.liveEnabled?this.enableLive():this.disableLive(),this._log("Binding the blur event",2),this.$element.on("blur.LiveValidator",this._blur.bind(this)),this.options.checks=this._filterChecks(this.options.checks)},_isValidTheme:function(t){var e=["markRequired","unmarkRequired","setMissing","unsetMissing","clearErrors","addErrors"];if(this._log("Testing if theme is valid",2),"function"!=typeof t)return this._log("Custom theme is not a function",3),!1;for(var i=0;i<e.length;i++)if("function"!=typeof t.prototype[e[i]])return this._log("Custom theme is not valid - missing the function `"+e[i]+"`",2),!1;return this._log("Custom theme is valid",2),!0},_filterChecks:function(t){var e={};if(this._log("Filtering checks",2),"Array"!==t.constructor.name)return this._log("Checks is not an array; cannot use it",3),[];var i=t.filter(function(t){return"function"==typeof this.tester[t]?!e.hasOwnProperty(t)&&(e[t]=!0):(this._log("`"+t+"` check does not exist so it will not be added to checks"),!1)},this);return this._log("Valid checks are: "+i),i},_blur:function(){var t=this.$element.val(),e=this.jq.trim(t);this._log("Blur triggered"),t!==e&&(this.$element.val(e),this._log("Trimed spaces from input",2)),this.missing=!1,""===e?(this.options.required&&(this._log("Input is empty and required",2),this.missing=!0),this._log("Input is empty and not required",2),this.theme.clearErrors()):(this._log("Input has data so will perform checks",2),this._performChecks(e)),this.missing?this.theme.setMissing():this.theme.unsetMissing()},_performChecks:function(t){this.tester.clearErrors();for(var e=0;e<this.options.checks.length;e++){var i=this.options.checks[e];this.tester[i](t),this._log("Performed check `"+i+"`",2)}this.errors=this.tester.getErrors(),0===this.errors.length?this.theme.clearErrors():this.theme.addErrors(this.errors)},setRequired:function(t){t=t||!1,this._log("Input is now required"),this.options.required=!0,this.theme.markRequired(),t&&(this._log("Checking input after making it required",2),this._blur.apply(this))},unsetRequired:function(){this._log("Input is now not required"),this.options.required=!1,this.theme.unmarkRequired(),this.theme.unsetMissing()},enableLive:function(t){t=t||!1,this._log("Live checking is now enabled"),this.liveEnabled=!0,this.$element.on("input.LiveValidator",function(){var t=this.$element.val();""!==t?(this._log("Value not empty so will perform checks",2),this._performChecks(this.$element.val())):(this._log("Value is empty so am removing errors",2),this.theme.clearErrors())}.bind(this)),t&&(this._log("Performing checks after enabling live checking",2),this._performChecks(this.$element.val()))},disableLive:function(){this._log("Live checking is now disabled"),this.liveEnabled=!1,this.$element.off("input.LiveValidator")},addChecks:function(t){this._log("Will now try to add checks: "+t);var e=this.options.checks.concat(t);this.options.checks=this._filterChecks(e)},removeAllChecks:function(){this._log("All check are now removed"),this.options.checks=[]},removeChecks:function(t){return this._log("Will now try to remove checks: "+t),Array.isArray(t)?void(this.options.checks=this.options.checks.filter(function(e){return t.indexOf(e)===-1})):void this._log("removeChecks can not handle a non-array element",3)},isValid:function(){return this._log("Checking if input is valid"),this._blur(),0===this.errors.length&&!this.missing},destroy:function(){this._log("Destroying plugin instance and reseting the input's state"),this.$element.off(".LiveValidator"),this.theme.clearErrors(),this.theme.unsetMissing()},_log:function(t,e){"undefined"==typeof e&&(e=1),e<=this.options.debug&&console.log(this.logLevels[--e]+": "+t)}};var LiveValidatorTester=function(){this.errors=[]};LiveValidatorTester.prototype.clearErrors=function(){this.errors=[]},LiveValidatorTester.prototype.addError=function(t){this.errors.push(t)},LiveValidatorTester.prototype.getErrors=function(){return this.errors};